---

# project information
project_name: dokuwiki
project_url: "https://www.dokuwiki.org/dokuwiki/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_categories: "Content Management"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Persistent config files"}
param_usage_include_ports: true
param_ports:
  - {external_port: "80", internal_port: "80", port_desc: "Application HTTP Port"}
# optional container parameters
opt_param_env_vars:
  - {env_var: "APP_URL", env_value: "/dokuwiki", desc: "Specify an APP_URL to append to your root location, helpful for subfolder reverse proxy setups.  Does not take effect until after first restart following setup."}
opt_param_usage_include_ports: true
opt_param_ports:
  - {external_port: "443", internal_port: "443", port_desc: "#optional Application HTTPS Port"}
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Upon first install go to `http://$IP:$PORT/install.php` once you have completed the setup, restart the container, login as admin and set "Use nice URLs" in the `admin/Configuration Settings` panel to `.htaccess` and tick `Use slash as namespace separator in URLs` to enable [nice URLs](https://www.dokuwiki.org/rewrite) you will find the webui at `http://$IP:$PORT/`, for more info see [{{ project_name|capitalize }}]({{ project_url }})
# init diagram
init_diagram: |
  "dokuwiki:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-nginx-end -> init-config
    init-os-end -> init-config
    init-config -> init-config-end
    init-crontab-config -> init-config-end
    init-dokuwiki-config -> init-config-end
    init-config -> init-crontab-config
    init-mods-end -> init-custom-files
    init-nginx-end -> init-dokuwiki-config
    base -> init-envfile
    init-os-end -> init-folders
    init-php -> init-keygen
    base -> init-migrations
    init-config-end -> init-mods
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    init-samples -> init-nginx
    init-version-checks -> init-nginx-end
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-keygen -> init-permissions
    init-nginx -> init-php
    init-folders -> init-samples
    init-custom-files -> init-services
    init-permissions -> init-version-checks
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-nginx
    svc-nginx -> legacy-services
    init-services -> svc-php-fpm
    svc-php-fpm -> legacy-services
  }
  Base Images: {
    "baseimage-alpine-nginx:3.21" <- "baseimage-alpine:3.21"
  }
  "dokuwiki:latest" <- Base Images
# changelog
changelogs:
  - {date: "10.05.25:", desc: "Rebase to Alpine 3.21."}
  - {date: "31.05.24:", desc: "Rebase to Alpine 3.20. Existing users should update their nginx confs to avoid http2 deprecation warnings."}
  - {date: "23.01.24:", desc: "Rebase to Alpine 3.19 with php 8.3."}
  - {date: "25.12.23:", desc: "Existing users should update: site-confs/default.conf - Cleanup default site conf."}
  - {date: "21.07.23:", desc: "Update built-in plugins on container update."}
  - {date: "25.05.23:", desc: "Rebase to Alpine 3.18, deprecate armhf."}
  - {date: "13.04.23:", desc: "Move ssl.conf include to default.conf."}
  - {date: "28.12.22:", desc: "Rebase to Alpine 3.17, migrate to s6v3."}
  - {date: "11.13.22:", desc: "Move lib/images/smileys/local and lib/images/interwiki outside of the container for user defined smiley and interwiki icon support."}
  - {date: "20.08.22:", desc: "Rebasing to alpine 3.15 with php8. Restructure nginx configs ([see changes announcement](https://info.linuxserver.io/issues/2022-08-20-nginx-base))."}
  - {date: "20.07.21:", desc: "Add php7-dom, fixes minor issues in sprintdoc template."}
  - {date: "15.04.21:", desc: "Add `vendor` folder to deny list."}
  - {date: "21.02.21:", desc: "Store search index outside of container, set absolute (default) path for `savedir`."}
  - {date: "23.01.21:", desc: "Rebasing to alpine 3.13."}
  - {date: "28.09.20:", desc: "Add php7-pdo_sqlite and php7-sqlite3."}
  - {date: "23.09.20:", desc: "Fix php-local.ini bug introduced in the prior PR."}
  - {date: "14.09.20:", desc: "Rebase to alpine 3.12. Add php7-ctype, php7-curl, php7-pdo_mysql, php7-pdo_pgsql, php7-pecl-imagick and php7-iconv. Bump upload max filesize and post max size to 100MB. Remove deprecated APP_URL env var. Fix breaking addons."}
  - {date: "19.12.19:", desc: "Rebasing to alpine 3.11."}
  - {date: "01.12.19:", desc: "Add php7-ldap package to support LDAP authentication."}
  - {date: "28.05.19:", desc: "Initial Release."}
